#summary Introduction to using Simple RPC

= Introduction =

MCollective is a framework for writing feature full agents and clients and provides a [WritingAgents rich system to do that].  Sometimes though you just have simpler needs than the full Client provides or need to prototype something quickly.  MCollective Simple RPC is a framework ontop of the standard client that abstracts away a lot of the complexity.

*NOTE: This feature is available from version 0.4 of MCollective*

A bit of code probably says more than lots of english, so here's a simple hello world Agent, it just echo's back everything you send it:

{{{
module Mcollective
    module Agent
        class Helloworld<RPC::Agent
            # Basic echo server
            def echo_action
                validate :msg, String
     
                reply.data = request[:msg]
            end
        end
    end
end
}}}

The nice thing about using a standard abstraction for clients is that you often won't even need to write a client for it, we ship a standard client that you can use to call the agent above:

{{{
$ mc-rpc --agent helloworld --action echo --arg msg="Welcome to MCollective Simple RPC"
Determining the amount of hosts matching filter for 2 seconds .... 1
                                        
devel.your.com                          : OK
    "hello world"



---- rpctest#echo call stats ----
           Nodes: 1
      Start Time: Wed Dec 23 20:49:14 +0000 2009
  Discovery Time: 0.00ms
      Agent Time: 54.35ms
      Total Time: 54.35ms
}}}


But you can still write your own clients, it's incredibly simple, full details of a client is out of scope for the introduction but here is some sample code to do the same call as above:

{{{
#!/usr/bin/ruby
 
require 'mcollective'
 
include MCollective::RPC
 
mc = rpcclient("helloworld")

printrpc mc.echo(:msg => "Welcome to MCollective Simple RPC")

printrpcstats
}}}