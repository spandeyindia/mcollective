#summary Auditing for SimpleRPC requests
#labels SimpleRPC

= Introduction =

As part of the [SimpleRPCIntroduction SimpleRPC] framework we've added an auditing system that you can use to log all requests received into a file or even send it over mcollective to a central auditing system.

= Configuration =
To enable logging you should set an option to enable it and also one to configure which plugin to use:

{{{
audit = 1
audirprovider = Logfile
}}}

This sets it up to use _MCollective::Audit::Logfile_ plugin for logging evens.

We're creating a convention where callers should be identified using the _:caller_ argument on requests sent to SimpleRPC

= Logfile plugin =

Auditing is implemented using plugins that you should install in the normal plugin directory under _mcollective/audit/_.  We have a sample Logfile plugin that you can see below:

{{{
module MCollective
    module Audit
        class Logfile<Base
            require 'pp'

            def audit_request(request, connection)
                logfile = Config.instance.pluginconf["logfile_audit.logfile"] || "/var/log/mcollective-audit.log"

                Log.instance.debug("Logging to '#{logfile}' - #{logfile.class}")
                File.open(logfile, "w") do |f|
                    msg = "#{request.uniqid}: #{request.time} "
                    msg << "caller=#{request.data[:caller]} " if request.data[:caller]
                    msg << "agent=#{request.agent} action=#{request.action} sendernode=#{request.sender}"

                    f.puts(msg)
                    f.puts("#{request.uniqid}: #{request.data.pretty_print_inspect}")
                end
            end
        end
    end
end
}}}

As you can see you only need to provide one method called _audit_request_, you will get the request in the form of an _MCollective::RPC::Request_ object as well as the connection to the middleware should you wish to send logs to a central host.

The Logfile plugin takes a configuration option:

{{{
plugin.logfile_audit.logfile = /var/log/mcollective-audit.log
}}}

We do not do log rotation of this file so you should do that yourself if you enable this plugin.

This log lines like:

{{{
9170b825005d47d66a86efe23ebaa106: 1263939135 caller=rip agent=service action=status sendernode=devel.your.com-client
9170b825005d47d66a86efe23ebaa106: {:caller=>"rip", :service=>"httpd"}
}}}