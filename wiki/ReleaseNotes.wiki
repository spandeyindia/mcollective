#summary Full Release History
#labels Featured

= Introduction =

This is a list of release notes for various releases, you should review these before upgrading as any potential problems and backward incompatible changes will be highlighted here.

<wiki:toc max_depth="3" />

== 0.4.1 - pending ==
=== Release Focus and Notes ===
This is a bug fix release to address some shortcomings and issues found in [SimpleRPCIntroduction Simple RPC].

The main issue is around handling of meta data in agents, the documented approach did not work, we've now solved this by adding a number of hooks into the processing of Simple RPC agents - see [SimpleRPCAgents#Meta_Data_and_Initialization Meta Data and Initialization] and [SimpleRPCAgents#Processing_Hooks Processing Hooks].

We've also made logging and config retrieval a bit easier in agents - and documented this.  See [SimpleRPCAgents#Agent_Configuration Agent Configuration] and [SimpleRPCAgents#Logging Logging]

=== Backwards Compatibility ===
No issues with backward compatibility, should be a simple upgrade.

=== Changes ===
|| *Date* || *Descriptions* ||
|| 2010/01/02 || Added hooks to plug into the processing of requests, also enabled setting meta data and timeouts - #14||
|| 2010/01/02 || Created readers for @config and @logger in the SimpleRPC agent - #23||
|| 2009/12/30 || Don't send out any requests if no nodes were discovered - #17||
|| 2009/12/30 || Added :discovered and :discovered_nodes to client stats - #20||
|| 2009/12/30 || Add a empty_filter? helper to the RPC mixin - #18||
|| 2009/12/30 || Fix formatting bug with progress bar - #21||
|| 2009/12/29 || Simplify mc-rpc command line - #16||
|| 2009/12/29 || Fix layout issue when printing hosts that did not respond - #15||


== 0.4.0 - 2009/12/29 ==
=== Release Focus and Notes ===
This release introduced a major new feature - [SimpleRPCIntroduction Simple RPC] - a framework for easily building clients and agents.  More than that it's a set of conventions and standards that will help us build generic clients like web based ones capable of talking to all agents.

We think this feature is ready for wide use, it's well documented and we've done extensive testing.  We'll be porting some of our own code over to it once this release is out and we do anticipate there might be some _0.4.x_ releases to round off a few issues that might remain.  We do not currently have any open tickets against Simple RPC.

We've also added the ability to create more complex queries such as:

{{{
--with-class /dev_server/ --with-class /rails/
}}}

This does an _AND_ operation on the puppet classes on the node and finds only nodes with both _/dev_server/_ *AND* _/rails/_ classes.  This new functionality applies to all types of filter.

We've made the _--with-class_ filters more generic in comments, documentation etc with an eye to be more usable in Chef and other Configuration Management environments - see [UsingWithChef].

=== Backwards Compatibility ===
Unfortunately introducing the new filtering methods has some backward compatibility issues, if you had clients/agents with code like:

{{{
options[:filter]["agent"] = "some agent"
}}}

You should now change that to:

{{{
options[:filter]["agent"] << "some agent"
}}}

As each filter is an array now.  If you do not change the code it will still work as before but you will not be able to use the compound filtering feature on filter types that you've forced to be a string and there might be some other undesired side effects.  We've tried though to at least not break old code, they just can't use the new features.

You were also able to test easily in the past if you're running unfiltered using 
something like:

{{{
if options[:filter] == {}
}}}

Now that's much harder and we've added a helper to make this easier:

{{{
if MCollective::Util.empty_filter?(options[:filter])
}}}

This new method is compatible with both the old and new filter method so you can start using it before you finish the first issue mentioned here.

We've also made the class filter more generic, in the past you did class filters like this:

{{{
options[:filter]["puppet_class"] << /apache/
}}}

Now you have to adjust it to:

{{{
options[:filter]["cf_class"] << /apache/
}}}

Old code will keep working but you should change to this name for filters to be consistent with the rest of the code base.

=== Changes ===
|| *Date* || *Descriptions* ||
|| 2009/12/28 || Add support for other configuration management systems like chef in the --with-class filters - #13||
|| 2009/12/28 || Add a _Util.empty`_`filter?_ to test for an empty filter||
|| 2009/12/27 || Create a new client framework [SimpleRPCIntroduction] - #6||
|| 2009/12/27 || Add support for multiple filters of the same type -  #3||

== 0.3.0 - 2009/12/17 ==
=== Release Focus and Notes ===
Primarily a bug fix release.  Only new feature is to allow the user to create _MCollective::Util::`*`_ classes and put those in the plugins directory.  This is useful for more complex agents and clients.

=== Backwards Compatibility ===
This release should not break any older code, if it does it's a bug.

=== Changes ===
|| *Date* || *Descriptions* ||
|| *2009/12/17* || *Release version 0.3.0* ||
||2009/12/16||Improvements for newer versions of Ruby where TERM signal was not handled - #7||
||2009/12/07||MCollective::Util is now a module and plugins can drop in util classes in the plugin dir||
||2009/12/07||The Rakefile now works with rake provided on Debian 4 systems - #2||
||2009/12/07||Improvements in the RC script for Debian and older Ubuntu systems - #5||

== 0.2.0 - 2009/12/02 ==
=== Release Focus and Notes ===
First numbered release

=== Backwards Compatibility ==
n/a

=== Changes ===
n/a